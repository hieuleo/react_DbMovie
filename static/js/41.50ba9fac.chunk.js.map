{"version":3,"file":"static/js/41.50ba9fac.chunk.js","mappings":"4MAOMA,EAAO,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,QAETC,EAASC,EAAAA,EAAAA,KACXC,EAAUC,EAAQ,KAExB,OAAIJ,GAEI,UAAC,IAAD,CAAKK,MAAO,CAACC,OAAS,UAAtB,WACI,SAAC,IAAD,CAAKD,MAAQ,CAACE,OAAQ,SAAUC,KAAO,EAAGC,OAAQ,EAAlD,UACI,SAAC,IAAD,CAAUC,QAAM,OAEpB,SAAC,IAAD,CAAKL,MAAQ,CAACE,OAAQ,SAAUC,KAAO,EAAGC,OAAQ,EAAlD,UACI,SAAC,IAAD,CAAUC,QAAM,OAEpB,SAAC,IAAD,CAAKL,MAAQ,CAACE,OAAQ,SAAUC,KAAO,EAAGC,OAAQ,EAAlD,UACI,SAAC,IAAD,CAAUC,QAAM,OAEpB,SAAC,IAAD,CAAKL,MAAQ,CAACE,OAAQ,SAAUC,KAAO,EAAGC,OAAQ,EAAlD,UACI,SAAC,IAAD,CAAUC,QAAM,SAOX,IAAjBX,EAAMY,QAAiBX,GAevB,SAAC,IAAD,CAAKK,MAAO,CAACC,OAAS,UAAtB,SACKP,EAAMa,KAAI,SAACC,GACR,OACI,SAAC,IAAD,CAAmBL,KAAO,EAA1B,UACQ,SAAC,KAAD,CAAMM,GAAE,gCAA2BX,EAAQU,EAAKE,OAAxC,YAAkDF,EAAKG,IAA/D,UACI,UAAC,IAAD,CACIX,MAAO,CAACC,OAAS,QACjBW,WAAS,EACTC,OAAO,gBAAKC,IAAI,UAAUC,IAA0B,OAArBP,EAAKQ,YAAsBC,EAA3B,0CAAwET,EAAKQ,eAHhH,WAKI,SAACpB,EAAD,CAAMc,MAAOF,EAAKE,MAAOQ,YAAaV,EAAKW,gBAC3C,gBAAKC,UAAW,wBAAhB,UACI,SAAC,KAAD,CACIC,YAAY,EACZC,MAAOC,KAAKC,MAAwB,GAAlBhB,EAAKiB,cACvBC,KAAI,UAAKH,KAAKC,MAAwB,GAAlBhB,EAAKiB,cAArB,KACJE,QAAQC,EAAAA,EAAAA,IAAY,CAEhBC,SAAU,EAGVC,cAAe,OAEfC,SAAU,OAEVC,uBAAwB,EAGxBC,UAAU,GAAD,OAAKV,KAAKC,MAAwB,GAAlBhB,EAAKiB,cAAmB,GAAK,UAAW,WACjES,UAAW,OACXC,WAAW,GAAD,OAAKZ,KAAKC,MAAwB,GAAlBhB,EAAKiB,cAAmB,GAAK,UAAW,WAClEW,gBAAiB,iBAI7B,eAAGhB,UAAU,iBAAb,mBAAqCZ,EAAK6B,oBAhChD7B,EAAKG,UAhBvB,SAAC,IAAD,CAAKX,MAAO,CAACC,OAAS,UAAtB,UACI,SAAC,IAAD,CAAKE,KAAO,GAAIC,OAAU,EAA1B,UACI,SAAC,KAAD,CACAkC,OAAO,MACP5B,MAAM,iBACN6B,SAAS,2EA0D7B,UAAeC,EAAAA,KAAW/C","sources":["assets/components/list.js"],"sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {Row, Col, Card ,Skeleton, Result} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport ImgError from '../img/image-not-available.png';\r\nimport { CircularProgressbar ,buildStyles } from 'react-circular-progressbar';\r\n\r\nconst List = ({lists,loading}) => {\r\n    \r\n    const { Meta } = Card;\r\n    const slugify = require('slugify')\r\n    \r\n    if (loading) {\r\n        return(\r\n            <Row style={{margin : '20px 0'}}>\r\n                <Col style ={{height: '450px'}} span ={5} offset={1}>\r\n                    <Skeleton active/>\r\n                </Col>  \r\n                <Col style ={{height: '450px'}} span ={5} offset={1}>\r\n                    <Skeleton active/>\r\n                </Col>  \r\n                <Col style ={{height: '450px'}} span ={5} offset={1}>\r\n                    <Skeleton active/>\r\n                </Col>  \r\n                <Col style ={{height: '450px'}} span ={5} offset={1}>\r\n                    <Skeleton active/>\r\n                </Col>  \r\n            </Row>\r\n            \r\n        )\r\n    }\r\n\r\n    if (lists.length === 0 && !loading) {\r\n        return(\r\n            <Row style={{margin : '20px 0'}}>\r\n                <Col span ={20} offset = {2}>\r\n                    <Result\r\n                    status=\"404\"\r\n                    title=\"OPPS! NOT DATA\"\r\n                    subTitle=\"Sorry, there are no movies that matched your query. PLEASE RETRY!\"\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    return(\r\n        <Row style={{margin : '20px 0'}}>\r\n            {lists.map((item)=>{\r\n                return(\r\n                    <Col key={item.id} span ={6}>\r\n                            <Link to={`/react_DbMovie/Detail/${slugify(item.title)}~${item.id}`}>\r\n                                <Card\r\n                                    style={{margin : '10px'}} \r\n                                    hoverable\r\n                                    cover={<img alt=\"example\" src={item.poster_path === null? ImgError :`https://image.tmdb.org/t/p/w300/${item.poster_path}`} />}\r\n                                >\r\n                                    <Meta title={item.title} description={item.release_date} />\r\n                                    <div className={'circular-custom--list'}>\r\n                                        <CircularProgressbar \r\n                                            background={true} \r\n                                            value={Math.floor(item.vote_average*10)} \r\n                                            text={`${Math.floor(item.vote_average*10)}%`}\r\n                                            styles={buildStyles({\r\n                                                // Rotation of path and trail, in number of turns (0-1)\r\n                                                rotation: 0,\r\n                                            \r\n                                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                strokeLinecap: 'butt',\r\n                                            \r\n                                                textSize: '26px',\r\n                                            \r\n                                                pathTransitionDuration: 1,\r\n                                            \r\n                                                // Colors\r\n                                                pathColor: `${Math.floor(item.vote_average*10) > 70?  '#20cf79' :'#cfd230'}`,\r\n                                                textColor: '#fff',\r\n                                                trailColor: `${Math.floor(item.vote_average*10) > 70?  '#204529' :'#413c0e'}`,\r\n                                                backgroundColor: '#081c22',\r\n                                            })}\r\n                                        />\r\n                                    </div>\r\n                                    <p className='vote-customize'>Vote: {item.vote_count}</p>\r\n                                </Card>\r\n                            </Link>\r\n                    </Col>\r\n                )\r\n            })}\r\n        </Row>\r\n    )\r\n}\r\n\r\nList.propTypes = {\r\n    lists: PropTypes.array.isRequired\r\n};\r\n   \r\n\r\nexport default React.memo(List)"],"names":["List","lists","loading","Meta","Card","slugify","require","style","margin","height","span","offset","active","length","map","item","to","title","id","hoverable","cover","alt","src","poster_path","ImgError","description","release_date","className","background","value","Math","floor","vote_average","text","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","vote_count","status","subTitle","React"],"sourceRoot":""}