{"version":3,"file":"static/js/100.5c74ef7b.chunk.js","mappings":"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","sources":["assets/components/common/title.js","assets/components/layout.js","assets/services/loginApi.js","assets/hooks/useLocation.js","assets/hooks/useAuth.js","assets/components/protectedLayout.js","assets/components/slider/slick-slider.js","assets/pages/home/component/latest-trailers.js","assets/components/common/communityPost.js","assets/services/api.js","assets/pages/home/index.js","assets/pages/popular/index.js","assets/pages/up-coming/index.js","assets/pages/search/index.js","assets/pages/detail/index.js","assets/pages/error/index.js","assets/pages/login/index.js","assets/routers/web.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Row, Col}  from 'antd';\r\n\r\nimport background from \"../../img/img1.jpg\";\r\nimport background1 from \"../../img/img2.jpg\";\r\nimport background2 from \"../../img/img3.jpg\";\r\nimport background3 from \"../../img/img4.jpg\";\r\nimport background4 from \"../../img/img5.jpg\";\r\nimport background5 from \"../../img/img6.jpg\";\r\nimport background6 from \"../../img/img7.jpg\";\r\nimport background7 from \"../../img/img8.jpg\";\r\n\r\nconst listBgr = [\r\n    background,\r\n    background1,\r\n    background2,\r\n    background3,\r\n    background4,\r\n    background5,\r\n    background6,\r\n    background7,\r\n]\r\n\r\nconst Title = (props) => {\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n    const [bgr, setBgr] = useState();\r\n\r\n    useEffect(() => {\r\n        let currentRandom = Math.floor(Math.random()*8);\r\n        setCurrentIndex(currentRandom);\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        setBgr(listBgr[currentIndex])\r\n    },[currentIndex])\r\n\r\n\r\n    return (\r\n        <Row className=\"class-title-row\">\r\n            <Col span={24} className=\"class-title-col\"\r\n            style={{backgroundImage : `linear-gradient(to right, rgba(3,37,65, 0.8) 0%, rgba(3,37,65, 0) 100%), url(${bgr})`}}\r\n            >\r\n                {props.children}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default React.memo(Title);","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport loadable from '@loadable/component'\r\n\r\nconst FooterComponent = loadable(()=> import('./common/footer'));\r\nconst ContentComponent = loadable(()=> import('./common/content'));\r\nconst HeaderComponent = loadable(()=> import('./common/header'));\r\nconst LayoutComponent = (props) => {\r\n    return (\r\n        <Layout className=\"layout\">\r\n            <HeaderComponent/>\r\n            <ContentComponent>\r\n                {props.children}\r\n            </ContentComponent>\r\n            <FooterComponent/>\r\n        </Layout>\r\n    )\r\n};\r\n\r\nexport default React.memo(LayoutComponent);","export default function getToken ({username, password}){\r\n    let token = null;\r\n    if ( username === \"admin\" && password === \"admin\") {\r\n        token = \"locationJsonWebTokenFake\";\r\n    }\r\n    return token;\r\n}","import { useState } from 'react';\r\n\r\nexport const useLocation = (keyWords, defaultValue) => {\r\n    const [valueLocalStorage, setValueLocalStorage] = useState(() =>{\r\n        try{\r\n            let value = window.localStorage.getItem(keyWords);\r\n            if(value) {\r\n                return JSON.parse(value);\r\n            }else{\r\n                window.localStorage.setItem(keyWords, JSON.stringify(defaultValue));\r\n                return defaultValue;\r\n            }\r\n        }catch(e){\r\n            return defaultValue;\r\n        }\r\n    })\r\n\r\n    const setValue = (newValue) => {\r\n        try{\r\n            window.localStorage.setItem(keyWords, JSON.stringify(newValue));\r\n        }catch(e){\r\n            console.error(e);\r\n        }\r\n        setValueLocalStorage(newValue);\r\n    }\r\n\r\n    return [valueLocalStorage, setValue];\r\n}","import React, { createContext, useContext, useMemo } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport getToken from '../services/loginApi';\r\nimport { useLocation } from '../hooks/useLocation';\r\n\r\nconst AuthContext = createContext();\r\n\r\n// tao AuthProvider la storage cua Context\r\nexport const AuthProvider = ({children}) => { \r\n    // khoi tao 1 storage\r\n    const [user, setUser] = useLocation('user_Login', null);\r\n    const navigate = useNavigate();\r\n    \r\n    // handle login request\r\n    const login = async (infoUser) => {\r\n        let token = getToken(infoUser);\r\n        if (token) {\r\n            setUser(token);\r\n            navigate(\"/react_DbMovie/Upcoming\", { replace : true }); // dieu huong login\r\n        }else{\r\n            alert(\" Incorrect useName or passWord !!!\")\r\n        }\r\n    }\r\n\r\n    // handle logout request\r\n    const logout = () => {\r\n        setUser(null);\r\n        navigate(\"/react_DbMovie/login\", { replace : true }); // dieu huong login\r\n    }\r\n\r\n    const value = useMemo(() => ({\r\n        user,\r\n        login,\r\n        logout\r\n    }),[user]);\r\n\r\n    return <AuthContext.Provider value={value} >{children}</AuthContext.Provider>\r\n}\r\n\r\n// tao useAuth dung de su dung AuthProvider:\r\nexport const useAuth = () => {\r\n   return useContext(AuthContext)\r\n}","import { Navigate , useOutlet} from 'react-router-dom';\r\nimport {useAuth} from '../hooks/useAuth';\r\n\r\nexport const ProtectedLayout = ({children}) => {\r\n    const { user } = useAuth();\r\n    const outlet = useOutlet();\r\n    if ( user === null ) {\r\n        return <Navigate to={\"/react_DbMovie/login\"}/>\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <>\r\n                {children}\r\n            </>\r\n            {outlet}    \r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport Slider from \"react-slick\";\r\nimport ImgError from '../../img/image-not-available.png';\r\nimport { Link } from \"react-router-dom\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { Card, Col, Skeleton} from 'antd';\r\nimport { CircularProgressbar ,buildStyles } from 'react-circular-progressbar';\r\n\r\nfunction SlickComponent({loading, data, config, className}) {\r\n    const { Meta } = Card;\r\n    const slugify = require('slugify')\r\n    let settings = config;\r\n\r\n    if (loading) {\r\n        return (\r\n            <Slider {...settings}>\r\n                <Col span={5}>\r\n                    <Skeleton active/>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Skeleton active/>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Skeleton active/>\r\n                </Col>  \r\n                <Col span={5}>\r\n                    <Skeleton active/>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Skeleton active/>\r\n                </Col>\r\n            </Slider>\r\n\r\n        )\r\n    }\r\n    return (\r\n        <Slider className={className} {...settings}>\r\n            {/* <Row> */}\r\n            {data.map(item => (item.backdrop_path !==null && (\r\n                <Col className={'Col-Slider-Item'} key={item.id}>\r\n                    <Link to={`/react_DbMovie/Detail/${slugify(item.title)}~${item.id}`}>\r\n                        <Card \r\n                            hoverable\r\n                            style={{\r\n                            width: 240,\r\n                            }}\r\n                            cover={<img alt={`${item.title}`} src={item.poster_path === null? ImgError :`https://image.tmdb.org/t/p/w300/${item.poster_path}`} />}\r\n                        >\r\n                            <Meta title={`${item.title}`} description={`${item.release_date}`} />\r\n                            <div className={'circular-custom--list'}>\r\n                                <CircularProgressbar \r\n                                    background={true} \r\n                                    value={item.vote_average*10} \r\n                                    text={`${item.vote_average*10}%`}\r\n                                    styles={buildStyles({\r\n                                        // Rotation of path and trail, in number of turns (0-1)\r\n                                        rotation: 0,\r\n                                    \r\n                                        // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                        strokeLinecap: 'butt',\r\n                                    \r\n                                        textSize: '26px',\r\n                                    \r\n                                        pathTransitionDuration: 0.5,\r\n                                    \r\n                                        // Colors\r\n                                        pathColor: `${item.vote_average*10 > 70?  '#20cf79' :'#cfd230'}`,\r\n                                        textColor: '#fff',\r\n                                        trailColor: `${item.vote_average*10 > 70?  '#204529' :'#413c0e'}`,\r\n                                        backgroundColor: '#081c22',\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                            <p className='vote-customize'>Vote: {item.vote_count}</p>\r\n                        </Card>\r\n                    </Link>\r\n                </Col>))\r\n            )}\r\n            {/* </Row> */}\r\n        </Slider>\r\n    );\r\n}\r\n\r\n\r\nexport default React.memo(SlickComponent)","import React from 'react';\r\nimport { Row, Col }  from 'antd';\r\nimport loadable from '@loadable/component';\r\nconst ToggleSwitchComponent = loadable(() => import('../../../components/common/toggle'));\r\n\r\nconst LatestTrailers = () => {\r\n    return (\r\n        <Row>\r\n            <Col span={24} className='latest_trailers'>\r\n                <h2 className='latest_trailers--header'>Latest Trailers</h2>\r\n                <ToggleSwitchComponent left=\"On TV\" right=\"In Theaters\"/>\r\n                <p>This panel didn't return any results. Try refreshing it.</p>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default React.memo(LatestTrailers)\r\n","import React from 'react';\r\nimport { Row, Col}  from 'antd';\r\n\r\nimport background from \"../../img/background-community.jpg\";\r\n\r\nconst ComunityComponent = (props) => {\r\n\r\n    return (\r\n        <Row className=\"class-comunity-row\">\r\n            <Col span={24} className=\"class-comunity-col\"\r\n            style={{backgroundImage: `url(${background})`}}\r\n            >\r\n                {props.children}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default React.memo(ComunityComponent);","import axios from 'axios';\r\n// Up coming & movie-time\r\nconst getApiOfUpcoming = async (page,month) => {\r\n    // createDate.\r\n    const getCurrents = new Date();\r\n    const getFutures = new Date();\r\n    getFutures.setTime(getCurrents.getTime() + (month*30*24*60*60*1000)) // plus 90 day future time. (129600 la so phut trong 90 ngay)\r\n    // get day\r\n    let currentDate = getCurrents.getDate();\r\n    currentDate = currentDate < 10 ? \"0\" + currentDate : currentDate\r\n    let futureDate = getFutures.getDate();\r\n    futureDate = futureDate < 10 ? \"0\" + futureDate : futureDate\r\n    // get month\r\n    let currentMonth = getCurrents.getMonth() +1;\r\n    currentMonth = currentMonth < 10 ? \"0\" + currentMonth : currentMonth\r\n    let futureMonth = getFutures.getMonth() +1;\r\n    futureMonth = futureMonth < 10 ? \"0\" + futureMonth : futureMonth\r\n    // get year\r\n    let currentYear = getCurrents.getFullYear();\r\n    let futureYear = getFutures.getFullYear();\r\n    // format-dates\r\n    let current = `${currentYear}-${currentMonth}-${currentDate}`;\r\n    let future = `${futureYear}-${futureMonth}-${futureDate}`;\r\n    // call Api \r\n    const url = `https://api.themoviedb.org/3/discover/movie?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&language=en-US&region=US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${page}&release_date.gte=${current}&release_date.lte=${future}&with_release_type=3|2`\r\n    const response = await axios.get(url);\r\n    const data = response.status === 200 ? response.data : {}\r\n    return data;\r\n}\r\n\r\n// Api discover // popular.\r\nasync function getMoviesDiscover  (pages) {\r\n    const Url = `https://api.themoviedb.org/3/discover/movie?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=${pages}`\r\n    const response = await axios.get(Url);\r\n    const data = response.status === 200 ? response.data : {};\r\n    return data\r\n}\r\n\r\n// now Playing\r\nasync function getMoviesNowPlaying  (pages) {\r\n    const Url = `https://api.themoviedb.org/3/movie/now_playing?api_key=d4627862d17c429f5b5285fb09aeb150&language=en-US&page=${pages}`\r\n    const response = await axios.get(Url);\r\n    const data = response.status === 200 ? response.data : {};\r\n    return data\r\n}\r\n\r\n// Detail movie\r\nasync function getDetailMovie(id, language) {\r\n    const Url = `https://api.themoviedb.org/3/movie/${id}?api_key=0aecc06bb4fadb06b5f071fef0c2ce6d&language=${language}&append_to_response=videos,images&include_image_language=${language},null`\r\n    const response = await axios.get(Url);\r\n    const data = response.status === 200 ? response.data : {};\r\n    return data\r\n}\r\n\r\n// recommended Search & highly rated:\r\nasync function getRecommendedSearch(pages) {\r\n    const Url = `https://api.themoviedb.org/3/movie/top_rated?api_key=d4627862d17c429f5b5285fb09aeb150&language=en-US&page=${pages}`\r\n    const response = await axios.get(Url);\r\n    const data = response.status === 200 ? response.data : {};\r\n    return data\r\n}\r\n\r\n// lists Search:\r\nasync function getSearchMovie(keyword, pages) {\r\n    const Url = `https://api.themoviedb.org/3/search/movie?api_key=d4627862d17c429f5b5285fb09aeb150&language=en-US&query=${keyword}&page=${pages}&include_adult=true`\r\n    const response = await axios.get(Url);\r\n    const data = response.status === 200 ? response.data : {};\r\n    return data\r\n}\r\nexport const Api = {\r\n    getApiOfUpcoming,\r\n    getMoviesDiscover,\r\n    getMoviesNowPlaying,\r\n    getDetailMovie,\r\n    getRecommendedSearch,\r\n    getSearchMovie,\r\n}","import React, {useState,useEffect} from 'react';\r\nimport { Row, Col, Button }  from 'antd';\r\nimport LayoutComponent from '../../components/layout';\r\nimport TitleComponent from '../../components/common/title';\r\nimport SliderHotMovies from '../../components/slider/slick-slider';\r\nimport LatestTrailers from './component/latest-trailers';\r\nimport CommunityComponent from '../../components/common/communityPost';\r\nimport './home.css';\r\nimport {Api} from '../../services/api';\r\nconst HomePage = () => {\r\n    let config = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 2000,\r\n        slidesToShow: 5,\r\n        slidesToScroll: 5,\r\n        accessibility : true,\r\n        autoplay : true,\r\n        autoplaySpeed : 5000,\r\n        pauseOnHover : true, // true: sẽ dừng lại khi hover chuột vào phần tử\r\n        draggable: true,\r\n        swipeToSlide: true,\r\n    }\r\n    const [dataHotMovies, setDataHotMovies] = useState([]);\r\n    const [dataNewMovies, setDataNewMovies] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const callDataPopular = async () => {\r\n            const data = await Api.getMoviesNowPlaying(1);\r\n            if (data.hasOwnProperty('results')) {\r\n                setDataHotMovies(data.results);\r\n            }\r\n            setLoading(false)\r\n        }\r\n        callDataPopular()\r\n\r\n        const callDataNew = async () => {\r\n            const data = await Api.getApiOfUpcoming(1,1);\r\n            if (data.hasOwnProperty('results')) {\r\n                setDataNewMovies(data.results);\r\n            }\r\n            setLoading(false)\r\n        }\r\n        callDataNew()\r\n    },[])\r\n\r\n    return(\r\n        <LayoutComponent>\r\n            <TitleComponent>\r\n                <h2 className=\"header-content\">Welcome</h2>\r\n                <h3 className=\"header-content-sub\">Millions of movies, TV shows and people to discover. Explore now.</h3>\r\n            </TitleComponent>\r\n            <Row>\r\n                <Col span = {22} offset = {1}>\r\n                    <h2 className=\"header-title-slider\">What's Popular</h2>\r\n                    <span className='header-title-slider-sub'>Online TV</span>\r\n                </Col>\r\n            </Row>\r\n            <SliderHotMovies loading={loading} data={dataHotMovies} config={config}/>\r\n            <LatestTrailers/>\r\n            <Row>\r\n                <Col span = {22} offset = {1}>\r\n                    <h2 className=\"header-title-slider\">Now Playing!</h2>\r\n                </Col>\r\n            </Row>\r\n            <SliderHotMovies className='new-movie' loading={loading} data={dataNewMovies} config={config}/>\r\n            <CommunityComponent>\r\n                <Row>\r\n                    <Col span={14}>\r\n                        <h2 className=\"header-content-community\">Join Today</h2>\r\n                        <p>Get access to maintain your own <em>custom personal lists, track what you've seen</em> and search and filter for <em>what to watch next</em>—regardless if it's in theatres, on TV or available on popular streaming services like .</p>\r\n                        <Button className=\"btn_community\"type=\"primary\">Sign Up</Button>\r\n                    </Col>\r\n                    <Col span={10}>\r\n                        <ul>\r\n                            <li>Enjoy TMDB ad free</li>\r\n                            <li>Filter by your subscribed streaming services and find something to watch</li>\r\n                            <li>Log the movies and TV shows you've seen</li>\r\n                            <li>Build custom lists</li>\r\n                            <li>Contribute to and improve our database</li>\r\n                        </ul>\r\n                    </Col>\r\n                </Row>\r\n            </CommunityComponent>\r\n        </LayoutComponent>\r\n    )\r\n}\r\n\r\nexport default React.memo(HomePage);","import React from 'react';\r\nimport loadable from '@loadable/component'\r\nconst LayoutComponent = loadable(() => import('../../components/layout'));\r\n\r\nconst PopularPage = () => {\r\n    return(\r\n        <LayoutComponent>\r\n            <p>this is a Popular page</p>\r\n        </LayoutComponent>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(PopularPage);","import React, {useState,useEffect} from 'react';\r\nimport loadable from '@loadable/component'\r\nimport { Api } from '../../services/api';\r\nconst LayoutComponent = loadable(() => import('../../components/layout'));\r\nconst PaginationComponent = loadable(() => import('../../components/Pagination'));\r\nconst ListComponent = loadable(() => import('../../components/list'));\r\n\r\nconst ComingPage = () => {\r\n    const [dataMovies, setDataMovies] = useState([]);\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n    const [page, setPage] = useState(1)\r\n    useEffect(() => {\r\n        const callData = async () => {\r\n            const data = await Api.getApiOfUpcoming(page,3);\r\n            if (data.hasOwnProperty('results')) {\r\n                setDataMovies(data.results);\r\n            }\r\n            if (data.total_results !== totalItems){\r\n                if (data.hasOwnProperty('total_results')){\r\n                    setTotalItems(data.total_results)\r\n                }\r\n            }\r\n            setLoading(false)\r\n        }\r\n        callData()\r\n        window.scroll({\r\n            top: 0, \r\n            left: 0, \r\n            behavior: 'smooth' \r\n        });           \r\n    },[page,totalItems])\r\n\r\n    const choosePage = (key) => {\r\n        setPage(key)\r\n    }\r\n    \r\n    return(\r\n        <LayoutComponent>\r\n            <h2>List of upcoming movies: {totalItems} results</h2>\r\n            <ListComponent lists={dataMovies} loading={loading} />\r\n            <PaginationComponent current={page} total={totalItems} changePages={choosePage}/>\r\n        </LayoutComponent>\r\n    )\r\n}\r\n\r\nexport default React.memo(ComingPage);","import React, { useState, useEffect } from 'react';\r\nimport loadable from '@loadable/component'\r\nimport { Api} from '../../services/api';\r\nimport './search.css';\r\nconst LayoutComponent = loadable(() => import('../../components/layout'));\r\nconst TitleComponent = loadable(() => import('../../components/common/title'));\r\nconst SeacrchComponent = loadable(() => import('../../features/searchInput'));\r\nconst ListComponent = loadable(() => import('../../components/list'));\r\nconst PaginationComponent = loadable(() => import('../../components/Pagination'));\r\n\r\nconst SearchPage = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingList, setLoadingList] = useState(true);\r\n    const [keyWords, setKetWorks] = useState('');\r\n    const [lists, setLists] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [totalItems, setTotalItems] = useState(0);\r\n    const [check, setCheck] = useState(false)\r\n\r\n    // first list:\r\n    useEffect(() => {\r\n        async function firstGetData (){\r\n            let data = await Api.getRecommendedSearch(1);\r\n            if (data.hasOwnProperty('results')){\r\n                setLists(data.results)\r\n            }\r\n            setLoading(false);\r\n            setLoadingList(false);\r\n        } \r\n        firstGetData()\r\n    },[])\r\n\r\n    // click search button:\r\n    useEffect(() => {\r\n        if (keyWords){\r\n            async function results () {\r\n                setLoading(true);\r\n                setLoadingList(true);\r\n                const data = await Api.getSearchMovie(keyWords,page);\r\n                // set list\r\n                if (data.hasOwnProperty('results')){\r\n                    setLists(data.results)\r\n                }\r\n                //setPage\r\n                if (data.total_results !== totalItems){\r\n                    setTotalItems(data.total_results)\r\n                    setCheck(true);\r\n                }\r\n                setLoadingList(false);\r\n                setLoading(false)\r\n            }\r\n            results () \r\n            window.scroll({\r\n                top: 0, \r\n                left: 0, \r\n                behavior: 'smooth' \r\n            }); \r\n        }\r\n    },[keyWords, page, totalItems])\r\n\r\n    const onSearch = (key) => {\r\n        if (key.trim().length> 0){\r\n            setKetWorks(key);\r\n            setPage(1);\r\n        }\r\n    }\r\n\r\n    const changePages = (key) => {\r\n        setPage(key);\r\n    }\r\n\r\n    return(\r\n        <LayoutComponent>\r\n            <TitleComponent>\r\n                <h2 className=\"header-content\">Rearch</h2>\r\n                <h3 className=\"header-content-sub\">Unlimited TV shows, movies and more.</h3>\r\n                <SeacrchComponent loading={loading} onSearch={onSearch}/>\r\n            </TitleComponent>\r\n            {check \r\n                &&\r\n                <div className=\"search-results\">\r\n                    <span>Search Results For </span>\r\n                    <span className=\"search-results--name\">{keyWords} </span>\r\n                    <span> : </span>\r\n                    <span className=\"search-results--number\"> {totalItems}</span>\r\n                </div>\r\n            }\r\n            <ListComponent loading={loadingList} lists={lists}/>\r\n            {check \r\n                &&\r\n                <PaginationComponent current={page} total={totalItems} changePages={changePages}/>\r\n            }\r\n        </LayoutComponent>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(SearchPage);","import React, {useState,useEffect} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {Api} from '../../services/api';\r\nimport loadable from '@loadable/component';\r\nimport 'react-modal-video/css/modal-video.min.css';\r\nconst LayoutComponent = loadable(() => import('../../components/layout'));\r\nconst HeaderDetail = loadable(() => import('../../components/detail/header'));\r\nconst ContentComponent = loadable(() => import('../../components/detail/container'));\r\n\r\nconst DetailPage = () => {\r\n    const [dataMovies, setDataMovies] = useState([]);\r\n    const [language, setLanguage] = useState('en-US');\r\n    const [loading, setLoading] = useState(true);\r\n    let {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        const callDataNew = async () => {\r\n            setLanguage('en-US');\r\n            const data = await Api.getDetailMovie(id, language);\r\n            if (!data.hasOwnProperty('status_code')) {\r\n                setDataMovies(data);\r\n            }\r\n            setLoading(false)\r\n        }\r\n        callDataNew()\r\n\r\n    },[id, language])\r\n    // feature:\r\n        // trả về thông báo k có data.\r\n        // mục cmt: https://api.themoviedb.org/3/movie/338953/reviews?api_key=d4627862d17c429f5b5285fb09aeb150&language=en-US&page=1\r\n        // Nhận danh sách các bộ phim được đề xuất cho một bộ phim:\r\n            // https://api.themoviedb.org/3/movie/{movie_id}/recommendations?api_key=d4627862d17c429f5b5285fb09aeb150&language=en-US&page=1\r\n        // Nhận danh sách các bộ phim tương tự:\r\n            // https://api.themoviedb.org/3/movie/{movie_id}/similar?api_key=d4627862d17c429f5b5285fb09aeb150&language=en-US&page=1\r\n    return(\r\n        <LayoutComponent>\r\n            <HeaderDetail dataMovies={dataMovies} loading={loading}/>\r\n            <ContentComponent/>\r\n        </LayoutComponent>\r\n    )\r\n}\r\n\r\n\r\nexport default React.memo(DetailPage);","import React from 'react';\r\nimport loadable from '@loadable/component';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Result } from 'antd';\r\nconst LayoutComponent = loadable(() => import('../../components/layout'));\r\n\r\nconst ErrorPage = () => {\r\n    return (\r\n        <LayoutComponent>\r\n            <Result\r\n                status=\"404\"\r\n                title=\"OPPS! PAGE NOT FOUND\"\r\n                subTitle=\"Sorry, the page you're looking for doesn't exist.\"\r\n                extra={\r\n                    <Link to={\"/react_DbMovie\"}>  \r\n                        <Button type=\"primary\">Back Home</Button>\r\n                    </Link>\r\n                }\r\n            />\r\n        </LayoutComponent>\r\n    )\r\n};\r\n\r\nexport default React.memo(ErrorPage);","import React from 'react';\r\nimport { Row, Col, Button, Form, Input } from 'antd';\r\nimport { useAuth } from '../../hooks/useAuth';\r\n\r\nconst LoginPage = () => {\r\n  const { login } = useAuth();\r\n\r\n\r\n  const onFinish = (values) => {\r\n    login(values);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Row style={{marginTop: '40px'}}>\r\n      <Col span={16} offset={2}>\r\n        <Form\r\n          name=\"basic\"\r\n          labelCol={{\r\n            span: 8,\r\n          }}\r\n          wrapperCol={{\r\n            span: 16,\r\n          }}\r\n          initialValues={{\r\n            remember: true,\r\n          }}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            label=\"Username\"\r\n            name=\"username\"\r\n            initialValues=\"admin\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your username!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            initialValues=\"admin\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n          <Form.Item\r\n            wrapperCol={{\r\n              offset: 8,\r\n              span: 16,\r\n            }}\r\n          >\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default React.memo(LoginPage);\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";  \r\nimport { AuthProvider } from '../hooks/useAuth';\r\nimport {ProtectedLayout} from '../components/protectedLayout';\r\nimport HomeComponent from '../pages/home/index';\r\nimport PopularPage   from '../pages/popular/index';\r\nimport ComingPage    from '../pages/up-coming/index';\r\nimport SearchPage    from '../pages/search/index';\r\nimport DetailPage    from '../pages/detail/index';\r\nimport ErrorPage     from '../pages/error/index';\r\nimport LoginPage     from '../pages/login/index';\r\n\r\nfunction RouterComponent() {\r\n  console.log('next-page')\r\n    return (\r\n      <BrowserRouter>\r\n        <AuthProvider>\r\n          <Routes>\r\n            <Route path=\"/react_DbMovie\" element={<HomeComponent />} />\r\n            {/* <Route path=\"/\" element={<HomeComponent />} /> */}\r\n            <Route path=\"/react_DbMovie/Popular\" element={<PopularPage />} />\r\n            <Route path=\"/react_DbMovie/Upcoming\" element={\r\n                // login cho page upcoming\r\n                <ProtectedLayout>\r\n                  <ComingPage />\r\n                </ProtectedLayout>\r\n              }/> \r\n            \r\n            <Route path=\"/react_DbMovie/Search\" element={<SearchPage />} />\r\n            {/* detail/ten-phim~id */}\r\n            {/* dung slug de xoa cac khoang trang trong ten phim */}\r\n            <Route path=\"/react_DbMovie/Detail/:slup~:id\" element={<DetailPage />} /> {/*: là sử dụng param */}\r\n            <Route path=\"/react_DbMovie/login\" element={<LoginPage />} />\r\n            <Route path=\"/react_DbMovie/*\" element={<ErrorPage />} />\r\n          </Routes>\r\n        </AuthProvider>\r\n      </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default React.memo(RouterComponent);"],"names":["listBgr","background","background1","background2","background3","background4","background5","background6","background7","Title","props","useState","currentIndex","setCurrentIndex","bgr","setBgr","useEffect","currentRandom","Math","floor","random","className","span","style","backgroundImage","children","React","FooterComponent","loadable","ContentComponent","HeaderComponent","LayoutComponent","getToken","username","password","token","AuthContext","createContext","AuthProvider","keyWords","defaultValue","value","window","localStorage","getItem","JSON","parse","setItem","stringify","e","valueLocalStorage","setValueLocalStorage","newValue","console","error","useLocation","user","setUser","navigate","useNavigate","login","infoUser","replace","alert","logout","useMemo","Provider","useAuth","useContext","ProtectedLayout","outlet","useOutlet","to","SlickComponent","loading","data","config","Meta","Card","slugify","require","settings","active","map","item","backdrop_path","title","id","hoverable","width","cover","alt","src","poster_path","ImgError","description","release_date","vote_average","text","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","vote_count","ToggleSwitchComponent","LatestTrailers","left","right","ComunityComponent","getApiOfUpcoming","page","month","getCurrents","Date","getFutures","setTime","getTime","currentDate","getDate","futureDate","currentMonth","getMonth","futureMonth","currentYear","getFullYear","futureYear","current","future","url","axios","response","status","pages","Url","language","getSearchMovie","keyword","Api","getMoviesDiscover","getMoviesNowPlaying","getDetailMovie","getRecommendedSearch","HomePage","dots","infinite","speed","slidesToShow","slidesToScroll","accessibility","autoplay","autoplaySpeed","pauseOnHover","draggable","swipeToSlide","dataHotMovies","setDataHotMovies","dataNewMovies","setDataNewMovies","setLoading","callDataPopular","hasOwnProperty","results","callDataNew","offset","type","PopularPage","PaginationComponent","ListComponent","ComingPage","dataMovies","setDataMovies","totalItems","setTotalItems","setPage","callData","total_results","scroll","top","behavior","lists","total","changePages","key","TitleComponent","SeacrchComponent","SearchPage","loadingList","setLoadingList","setKetWorks","setLists","check","setCheck","firstGetData","onSearch","trim","length","HeaderDetail","DetailPage","setLanguage","useParams","ErrorPage","subTitle","extra","LoginPage","marginTop","name","labelCol","wrapperCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","log","autoComplete","label","rules","required","message","htmlType","RouterComponent","path","element"],"sourceRoot":""}