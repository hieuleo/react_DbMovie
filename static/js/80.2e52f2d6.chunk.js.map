{"version":3,"file":"static/js/80.2e52f2d6.chunk.js","mappings":"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","sources":["assets/components/detail/container.js"],"sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport {Row, Col, Card} from 'antd';\r\nimport { Link } from \"react-router-dom\";\r\nimport { CircularProgressbar ,buildStyles } from 'react-circular-progressbar';\r\nimport {Api} from '../../services/api';\r\nimport './detail.css';\r\nimport avatar from '../../img/nullAvatar.png';\r\nimport avatarComment from '../../img/avatar-comment.png';\r\nimport ImgError from '../../img/image-not-available.png';\r\nconst ContainerComponent = ({id,language,dataCast, dataMovies}) => {\r\n\r\n    const [dataReview, setDataReview] = useState([]);\r\n    const [totalPageReviews, setTotalPageReviews] = useState(1);\r\n    const [currentPageReviews, setCurrentPageReviews] = useState(1);\r\n    const [reviews, setReviews] = useState(0);\r\n    const [listProposalMuvies, setListProposalMuvies] = useState([]);\r\n    const [totalResultProposalMuvies, setTotalResultProposalMuvies] = useState(1)\r\n    const [currentPageProposalMuvies, setCurrentPageProposalMuvies] = useState(1);\r\n\r\n    const { Meta } = Card;\r\n    let overview;\r\n    const slugify = require('slugify');\r\n    console.log('data', listProposalMuvies,totalResultProposalMuvies)\r\n\r\n    useEffect(() => {\r\n        const callDataReview = async () => {\r\n            const data = await Api.getCommentsMovies(id, language,  currentPageReviews);\r\n            if (data.hasOwnProperty('results')) {\r\n                setDataReview(data.results)\r\n            }\r\n            if (data.hasOwnProperty('total_pages')){\r\n                setTotalPageReviews(data.total_pages)\r\n            }\r\n            if (data.hasOwnProperty('total_results')){\r\n                setReviews(data.total_results)\r\n            }\r\n            setCurrentPageReviews(1)\r\n        }\r\n        callDataReview()\r\n\r\n        const callDataMovieProposal = async () => {\r\n            const data = await Api.getProposalDetails(id, 1);\r\n            if (data.hasOwnProperty('results')){\r\n                setListProposalMuvies(data.results);\r\n            }\r\n            if (data.hasOwnProperty('total_pages')){\r\n                setTotalResultProposalMuvies(data.total_pages);\r\n            }\r\n            setCurrentPageProposalMuvies(1)\r\n        }   \r\n        callDataMovieProposal();\r\n    },[id, language])\r\n    \r\n    useEffect(() => {\r\n\r\n    },[dataCast, dataMovies]);\r\n\r\n    const clickMore = () => {\r\n        if (currentPageReviews < totalPageReviews){\r\n            const callDataReview = async () => {\r\n                const data = await Api.getCommentsMovies(id, language,  currentPageReviews +1);\r\n                if (data.hasOwnProperty('results')) {\r\n                    setDataReview([...dataReview,...data.results])\r\n                }\r\n            }\r\n            callDataReview()\r\n        };\r\n        setCurrentPageReviews(currentPageReviews => currentPageReviews+1)\r\n    }\r\n\r\n    const clickMoreMovie = () => {\r\n        if (currentPageProposalMuvies < totalResultProposalMuvies){\r\n            const callDataMovieProposal = async () => {\r\n                const data = await Api.getProposalDetails(id, currentPageProposalMuvies + 1);\r\n                if (data.hasOwnProperty('results')){\r\n                    setListProposalMuvies([...listProposalMuvies.slice(0,19),...data.results]);\r\n                }\r\n            }   \r\n            callDataMovieProposal();\r\n        }\r\n        setCurrentPageProposalMuvies(currentPageProposalMuvies => currentPageProposalMuvies+1)\r\n    }\r\n\r\n    if (dataMovies){\r\n        if (dataMovies.hasOwnProperty('overview')){\r\n            overview = dataMovies.overview\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row className=\"container_row\">\r\n            <Col className=\"container_col\">\r\n                <Row>\r\n                    <Col span={24} className=\"detail_overview\">\r\n                        <Row>\r\n                            <Col span={7} className=\"detail_overview--block\">\r\n                            </Col>\r\n                            <Col span={17}>\r\n                                <h2 className=\"detail_overview--header\"> Overview </h2>\r\n                                <p className=\"detail_overview--content\">{overview}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24} className=\"detail_cast\">\r\n                        <h2 className=\"detail_cast--header\">Series Cast:</h2>\r\n                    </Col>\r\n                    <Col span={23} offset={1}>\r\n                        <div className=\"detail_cast--list\">\r\n                            {\r\n                                dataCast ? dataCast.map(item => ( \r\n                                    item.character ?\r\n                                    <div key={item.name} className=\"detail_cast--item\">\r\n                                        { item.profile_path?\r\n                                            <img alt={item.name} src={`https://www.themoviedb.org/t/p/w138_and_h175_face${item.profile_path}`}></img>\r\n                                            : <img src={`${avatar}`}></img>\r\n                                        }\r\n                                        <h2>{item.name}</h2>\r\n                                        <p>{item.character}</p>\r\n                                        <p className=\"detail_cast--item-job\"> {item.known_for_department} </p>\r\n                                    </div> : null\r\n                                )): \r\n                                    <div  className=\"detail_cast--item\">\r\n                                        <img src={`${avatar}`}></img>\r\n                                        <h2>unknown</h2>\r\n                                        <p>unknown</p>\r\n                                        <p className=\"detail_cast--item-job\"> unknown</p>\r\n                                    </div>\r\n                            }\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={24} offset={0} className=\"detail_review\">\r\n                            <h2 className=\"detail_review--header\">Reviews:  {reviews}</h2>\r\n                            <div className=\"detail_review--list\">\r\n                                {\r\n                                    dataReview.length > 0? dataReview.map(item => (\r\n                                        <div key={item.id} className=\"detail_review--item\">\r\n                                            <div>\r\n                                                {\r\n                                                    item.author_details.avatar_path ? \r\n                                                    <img className=\"detail_review--avatar\" src={item.author_details.avatar_path.includes('/https://www.gravatar.com/avatar/')?`${item.author_details.avatar_path}`.replace('/',''): `https://www.gravatar.com/avatar${item.author_details.avatar_path}`} alt=\"Gravatar\"></img>:\r\n                                                    <img className=\"detail_review--avatar\" src={avatarComment} alt=\"Gravatar\"></img>\r\n                                                }\r\n                                            </div>\r\n                                            <div>\r\n                                                <h2 className=\"detail_review--name\">{item.author_details.username}</h2>\r\n                                                <span className=\"detail_review--updated\">{item.created_at}</span>\r\n                                                <p className=\"detail_review--content\">{item.content}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    )): <p>We don't have any reviews for {dataMovies.title} </p>\r\n                                }\r\n                                {\r\n                                    totalPageReviews > currentPageReviews ?<div className=\"detail_review--button\"><button onClick={() =>{clickMore()}}>MORE</button> </div> : null\r\n                                }\r\n                            </div>\r\n                    </Col>\r\n                    <Col span={24} className=\"deteil_recommendations\">\r\n                        <h2 className=\"deteil_recommendations--header\">Recommendations:</h2>\r\n                        <Row>\r\n                            {\r\n                                listProposalMuvies.map(item =>\r\n                                    <Col key={item.id} span={4} className=\"deteil_recommendations--item\">\r\n                                        <Link to={`/react_DbMovie/Detail/${slugify(item.title)}~${item.id}`}>\r\n                                            <Card\r\n                                                style={{margin : '10px'}} \r\n                                                hoverable\r\n                                                cover={<img alt=\"example\" src={item.poster_path === null? ImgError :`https://image.tmdb.org/t/p/w300/${item.poster_path}`} />}\r\n                                            >\r\n                                                <Meta title={item.title} description={item.release_date} />\r\n                                                <div className={'circular-custom--list'}>\r\n                                                    <CircularProgressbar \r\n                                                        background={true} \r\n                                                        value={Math.floor(item.vote_average*10)} \r\n                                                        text={`${Math.floor(item.vote_average*10)}%`}\r\n                                                        styles={buildStyles({\r\n                                                            // Rotation of path and trail, in number of turns (0-1)\r\n                                                            rotation: 0,\r\n                                                        \r\n                                                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                                                            strokeLinecap: 'butt',\r\n                                                        \r\n                                                            textSize: '26px',\r\n                                                        \r\n                                                            pathTransitionDuration: 1,\r\n                                                        \r\n                                                            // Colors\r\n                                                            pathColor: `${Math.floor(item.vote_average*10) > 70?  '#20cf79' :'#cfd230'}`,\r\n                                                            textColor: '#fff',\r\n                                                            trailColor: `${Math.floor(item.vote_average*10) > 70?  '#204529' :'#413c0e'}`,\r\n                                                            backgroundColor: '#081c22',\r\n                                                        })}\r\n                                                    />\r\n                                                </div>\r\n                                                <p className='vote-customize'>Vote: {item.vote_count}</p>\r\n                                            </Card>\r\n                                        </Link>\r\n                                    </Col>\r\n                                )\r\n                            }\r\n                            <Col span={4}>\r\n                                {\r\n                                    currentPageProposalMuvies < totalResultProposalMuvies ? <div className=\"detail_review--button detail_recommendations--button\"><button onClick={() =>{clickMoreMovie()}}>MORE</button> </div> : null\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default React.memo(ContainerComponent);"],"names":["ContainerComponent","overview","id","language","dataCast","dataMovies","useState","dataReview","setDataReview","totalPageReviews","setTotalPageReviews","currentPageReviews","setCurrentPageReviews","reviews","setReviews","listProposalMuvies","setListProposalMuvies","totalResultProposalMuvies","setTotalResultProposalMuvies","currentPageProposalMuvies","setCurrentPageProposalMuvies","Meta","Card","slugify","require","console","log","useEffect","callDataReview","Api","data","hasOwnProperty","results","total_pages","total_results","callDataMovieProposal","className","span","offset","map","item","character","profile_path","alt","name","src","avatar","known_for_department","length","author_details","avatar_path","includes","replace","username","created_at","content","title","onClick","clickMore","to","style","margin","hoverable","cover","poster_path","ImgError","description","release_date","background","value","Math","floor","vote_average","text","styles","buildStyles","rotation","strokeLinecap","textSize","pathTransitionDuration","pathColor","textColor","trailColor","backgroundColor","vote_count","slice","clickMoreMovie","React"],"sourceRoot":""}